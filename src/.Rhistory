s2_img
# Create a st_point representing the center of the tile (255x255)
crs_kernel <- sprintf("EPSG:%s", crs_sp)
crs_kernel
point_utm <- st_transform(cente_sp, crs_kernel)
ee_point <- ee$Geometry$Point(point_utm[[1]], proj = crs_kernel)
s2_img <- ee$Image$reproject(s2_img, crs_kernel)
s2_img
fmask_files
fmask_files <- FMASK_FOLDER_FILES
s2_id, raster_ref, fmask_files
s2_id
raster_ref
fmask_files
fmask_files
raster_ref
s2_id
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
point
dataset
id
allfmaskfiles_b <- basename(fmask_files)
fmask_files
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
fmask_file
raster_ref
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
rextent
allfmaskfiles_b
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
tempfile <- "/home/csaybar/z_.tif"
tempfile <- "/home/csaybar/z_.tif"
tempfile
dirname(getwd())
dirname(getwd())
tempfile <- "/home/csaybar/z_.tif"
tempfile = "/home/csaybar/z_.tif"
tempfile
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
tempfile
raster(tempfile)
plot(raster(tempfile))
fmask_up <- function(s2_id, raster_ref, fmask_files, tempfile = "/home/csaybar/z_.tif") {
allfmaskfiles_b <- basename(fmask_files)
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
raster(tempfile)
}
fmask_up(s2_id, raster_ref, fmask_files)
fmask_up <- function(s2_id, raster_ref, fmask_files, tempfile = "/home/csaybar/z_.tif") {
allfmaskfiles_b <- basename(fmask_files)
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -q -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
raster(tempfile)
}
fmask_up(s2_id, raster_ref, fmask_files)
QA60_creator <- function(s2_id, raster_ref) {
# Get centroid coordinates
cente_sp <- st_sfc(st_point(apply(coordinates(raster_ref), 2, mean)), crs = crs(raster_ref)@projargs)
crs_sp <- st_crs(read_stars(raster_ref@file@name, proxy = TRUE))$epsg
# Sentinel-2 Level 1C
s2_img <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$select("QA60")
# Create a st_point representing the center of the tile (255x255)
crs_kernel <- sprintf("EPSG:%s", crs_sp)
point_utm <- st_transform(cente_sp, crs_kernel)
ee_point <- ee$Geometry$Point(point_utm[[1]], proj = crs_kernel)
s2_img <- ee$Image$reproject(s2_img, crs_kernel)
# 4. Create a 511x511 tile (list -> data_frame -> sp -> raster)
s2_img %>%
ee$Image$addBands(ee$Image$pixelCoordinates(projection = crs_kernel)) %>%
ee$Image$neighborhoodToArray(
kernel = ee$Kernel$rectangle(255, 255, "pixels")
) %>%
ee$Image$sampleRegions(ee$FeatureCollection(ee_point),
projection = crs_kernel,
scale = 10) %>%
ee$FeatureCollection$getInfo() -> s2_img_array
band_names <- c("QA60", "x", "y")
extract_fn <- function(x) as.numeric(unlist(s2_img_array$features[[1]]$properties[x]))
image_as_df <- do.call(cbind,lapply(band_names, extract_fn))
colnames(image_as_df) <- band_names
image_as_tibble <- as_tibble(image_as_df)
coordinates(image_as_tibble) <- ~x+y
sf_to_stack <- function(x) rasterFromXYZ(image_as_tibble[x])
final_stack <- stack(lapply(names(image_as_tibble), sf_to_stack))
crs(final_stack) <- st_crs(crs_kernel)$proj4string
final_stack
}
fmask_up <- function(s2_id, raster_ref, fmask_files, tempfile = "/home/csaybar/z_.tif") {
allfmaskfiles_b <- basename(fmask_files)
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -q -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
raster(tempfile)
}
fullname_s2f <- files_points_only_img_folder[index]
fullname_s2f
FMask_creator <- function(s2_id, raster_ref, fmask_files, tempfile = "/home/csaybar/z_.tif") {
allfmaskfiles_b <- basename(fmask_files)
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -q -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
raster(tempfile)
}
fullname_s2f <- files_points_only_img_folder[index]
fullname_s2f
basename(fullname_s2f)
q60 <- FMask_creator(basename(fullname_s2f), refraster, fmask_files)
fullname_s2f <- files_points_only_img_folder[index]
q60 <- FMask_creator(basename(fullname_s2f), refraster, fmask_files)
q60
rfmask <- FMask_creator(basename(fullname_s2f), refraster, fmask_files)
fullname_s2f <- files_points_only_img_folder[index]
rfmask <- FMask_creator(basename(fullname_s2f), refraster, fmask_files)
rfmask_out <- sprintf("%s/target/fmask.tif", fullname_s2f)
rfmask
# 5. Fmask generation
for (index in 1:5) {
fullname_s2f <- files_points_only_img_folder[index]
rfmask <- FMask_creator(basename(fullname_s2f), refraster, fmask_files)
rfmask_out <- sprintf("%s/target/fmask.tif", fullname_s2f)
writeRaster(x = rfmask, filename = rfmask_out, overwrite = TRUE)
}
np <- import("src/demo.npy")
np <- reticulate::py_run_file("src/demo.npy")
np <- reticulate::py_run_file("src/demo.py")
np <- reticulate::py_run_file("src/demo.py")
source_python("main.py")
np <- source_python("src/main.py")
setwd("src/")
np <- source_python("main.py")
np <- import("numpy")
np <- source_python("main.py")
source_python
np <- source_python("main.py")
#' upgrade folder cloudsen12
#'
library(reticulate)
library(dplyr)
library(raster)
library(stars)
library(rgee)
library(sf)
np <- import("numpy")
np <- source_python("main.py")
np <- source_python("main.py")
dnp <- import("tensorflow")
reticulate::install_python("tensorflow")
reticulate::py_install("tensorflow")
DDnp <- source_python("main.py")
reticulate::py_install("rasterio")
np <- source_python("main.py")
np <- import("numpy")
np
source_python("main.py")
source_python("main.py")
FMask_creator <- function(s2_id, raster_ref, fmask_files, tempfile = "/home/csaybar/z_.tif") {
allfmaskfiles_b <- basename(fmask_files)
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -q -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
raster(tempfile)
}
cloudsen12_up_local <- function(point_dir, fmask_folder) {
message("Processing: ", basename(point_dir))
# 1. Identify the point :)
point_dir_full_files <- list.files(point_dir, full.names = TRUE)
# 2. get only the folder with s2/s1 data :D
files_points_only_img_folder <- point_dir_full_files[grepl("^[0-9]", basename(point_dir_full_files))]
if (length(files_points_only_img_folder) != 5) {
stop("Initial regex condition fail :/")
}
# 3. Load raster ref
refraster <- list.files(
path = files_points_only_img_folder[1],
pattern = "sen2cor_real",
recursive = TRUE,
full.names = TRUE
) %>% raster()
# 4. QA60 generation
for (index in 1:5) {
fullname_s2f <- files_points_only_img_folder[index]
q60 <- QA60_creator(basename(fullname_s2f), refraster)
q60_out <- sprintf("%s/target/qa60.tif", fullname_s2f)
writeRaster(x = q60, filename = q60_out, overwrite = TRUE)
}
# 5. Fmask generation
for (index in 1:5) {
fullname_s2f <- files_points_only_img_folder[index]
rfmask <- FMask_creator(basename(fullname_s2f), refraster, fmask_files)
rfmask_out <- sprintf("%s/target/fmask.tif", fullname_s2f)
writeRaster(x = rfmask, filename = rfmask_out, overwrite = TRUE)
}
# 6. UNET
}
cloudsen12_up_local <- function(point_dir, fmask_folder) {
message("Processing: ", basename(point_dir))
# 1. Identify the point :)
point_dir_full_files <- list.files(point_dir, full.names = TRUE)
# 2. get only the folder with s2/s1 data :D
files_points_only_img_folder <- point_dir_full_files[grepl("^[0-9]", basename(point_dir_full_files))]
if (length(files_points_only_img_folder) != 5) {
stop("Initial regex condition fail :/")
}
# 3. Load raster ref
refraster <- list.files(
path = files_points_only_img_folder[1],
pattern = "sen2cor_real",
recursive = TRUE,
full.names = TRUE
) %>% raster()
# 4. QA60 generation
for (index in 1:5) {
fullname_s2f <- files_points_only_img_folder[index]
q60 <- QA60_creator(basename(fullname_s2f), refraster)
q60_out <- sprintf("%s/target/qa60.tif", fullname_s2f)
writeRaster(x = q60, filename = q60_out, overwrite = TRUE)
}
# 5. Fmask generation
for (index in 1:5) {
fullname_s2f <- files_points_only_img_folder[index]
rfmask <- FMask_creator(basename(fullname_s2f), refraster, fmask_files)
rfmask_out <- sprintf("%s/target/fmask.tif", fullname_s2f)
writeRaster(x = rfmask, filename = rfmask_out, overwrite = TRUE)
}
# 6. UNET
}
QA60_creator <- function(s2_id, raster_ref) {
# Get centroid coordinates
cente_sp <- st_sfc(st_point(apply(coordinates(raster_ref), 2, mean)), crs = crs(raster_ref)@projargs)
crs_sp <- st_crs(read_stars(raster_ref@file@name, proxy = TRUE))$epsg
# Sentinel-2 Level 1C
s2_img <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$select("QA60")
# Create a st_point representing the center of the tile (255x255)
crs_kernel <- sprintf("EPSG:%s", crs_sp)
point_utm <- st_transform(cente_sp, crs_kernel)
ee_point <- ee$Geometry$Point(point_utm[[1]], proj = crs_kernel)
s2_img <- ee$Image$reproject(s2_img, crs_kernel)
# 4. Create a 511x511 tile (list -> data_frame -> sp -> raster)
s2_img %>%
ee$Image$addBands(ee$Image$pixelCoordinates(projection = crs_kernel)) %>%
ee$Image$neighborhoodToArray(
kernel = ee$Kernel$rectangle(255, 255, "pixels")
) %>%
ee$Image$sampleRegions(ee$FeatureCollection(ee_point),
projection = crs_kernel,
scale = 10) %>%
ee$FeatureCollection$getInfo() -> s2_img_array
band_names <- c("QA60", "x", "y")
extract_fn <- function(x) as.numeric(unlist(s2_img_array$features[[1]]$properties[x]))
image_as_df <- do.call(cbind,lapply(band_names, extract_fn))
colnames(image_as_df) <- band_names
image_as_tibble <- as_tibble(image_as_df)
coordinates(image_as_tibble) <- ~x+y
sf_to_stack <- function(x) rasterFromXYZ(image_as_tibble[x])
final_stack <- stack(lapply(names(image_as_tibble), sf_to_stack))
crs(final_stack) <- st_crs(crs_kernel)$proj4string
final_stack
}
FMask_creator <- function(s2_id, raster_ref, fmask_files, tempfile = "/home/csaybar/z_.tif") {
allfmaskfiles_b <- basename(fmask_files)
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -q -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
raster(tempfile)
}
list.files("/media/csaybar/Elements SE/cloudSEN12/high/")
list.files("/media/csaybar/Elements SE/cloudSEN12/high/", full.names = TRUE)
point_dirs <- list.files("/media/csaybar/Elements SE/cloudSEN12/high/", full.names = TRUE)
index <- 1
point_dirs[index]
fmask_folder
FMASK_FOLDER_FILES
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
FMask_creator <- function(s2_id, raster_ref, fmask_files, tempfile = "/home/csaybar/z_.tif") {
allfmaskfiles_b <- basename(fmask_files)
id <- ee$Image(sprintf("COPERNICUS/S2/%s", s2_id))$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
crs <- st_crs(raster_ref)$epsg
rextent <- extent(raster_ref)
xmin <- rextent[1]
xmax <- rextent[2]
ymin <- rextent[3]
ymax <- rextent[4]
system(
sprintf(
"gdalwarp '%s' '%s' -overwrite -te %s %s %s %s -q -tr 10 10 -t_srs %s",
fmask_file, tempfile,
xmin, ymin,
xmax, ymax, sprintf("EPSG:%s", crs)
)
)
raster(tempfile)
}
point_dirs
index
cloudsen12_up_local(point_dirs[2], FMASK_FOLDER_FILES)
index
cloudsen12_up_local(point_dirs[3], FMASK_FOLDER_FILES)
"COPERNICUS/S2/20190208T143751_20190208T144455_T19KDR"
ee$Image("COPERNICUS/S2/20190208T143751_20190208T144455_T19KDR")
Map$addLayer(ee$Image("COPERNICUS/S2/20190208T143751_20190208T144455_T19KDR"))
img <- ee$Image("COPERNICUS/S2/20190208T143751_20190208T144455_T19KDR")
Map$addLayer(img)
Map$centerObject(img)
Map$addLayer(img)
Map$addLayer(img, list(min=0,max=4000))
library(rgeeExtra)
img
names(img)
img[["QA60"]]
Map$addLayer(img, list(min=0,max=4000))+
Map$addLayer(img[["QA60"]]>0, list(min=0,max=1))
index <- 4
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
img <- ee$Image("COPERNICUS/S2/20190208T143751_20190208T144455_T19KDR")
Map$centerObject(img)
Map$addLayer(img, list(min=0,max=4000))+
Map$addLayer(img[["QA60"]]>0, list(min=0,max=1))
img <- ee$Image("COPERNICUS/S2/20200625T153619_20200625T153621_T17MNP")
Map$centerObject(img)
Map$addLayer(img, list(min=0,max=4000))+
Map$addLayer(img[["QA60"]]>0, list(min=0,max=1))
mm <- Map$addLayer(img, list(min=0,max=4000))+
Map$addLayer(img[["QA60"]]>0, list(min=0,max=1))
mm
"/media/csaybar/Elements SE/cloudSEN12/high/point_0005/20200625T153619_20200625T153621_T17MNP/target/qa60.tif"
raster("/media/csaybar/Elements SE/cloudSEN12/high/point_0005/20200625T153619_20200625T153621_T17MNP/target/qa60.tif")
rrr <- raster("/media/csaybar/Elements SE/cloudSEN12/high/point_0005/20200625T153619_20200625T153621_T17MNP/target/qa60.tif")
rrr
library(mapview)
mapview(rrr, mm)
mm
rrr
mapview(rrr, mm)
img$get("GRANULE_ID")$getInfo()
img$get("GRANULE_ID")$getInfo()
FMASK_FOLDER_FILES
id <- img$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
fmask_file
file.copy(
fmask_file,
"/home/csaybar/Desktop/ff.tif"
)
fmask_file
raster(fmask_file)
img <- ee$Image("COPERNICUS/S2/20200625T153619_20200625T153621_T17MNP")
rrr
id <- img$get("GRANULE_ID")$getInfo()
fmask_file <- fmask_files[allfmaskfiles_b %in% sprintf("%s_Fmask4.tif", id)][1]
raster(fmask_file)
for (index in 4:2000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
library(reticulate)
library(dplyr)
library(raster)
library(stars)
library(rgee)
library(sf)
print(index)
for (index in 767:2000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
ee_Initialize("aybar1994", drive = TRUE, gcs = TRUE)
for (index in 1180:2000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
for (index in 1307:6000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
point_dirs
for (index in 1307:2000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
for (index in 1333:2000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
point_dirs
## scribble
point_dirs <- list.files("/media/csaybar/Elements SE/cloudSEN12/scribble/", full.names = TRUE)
point_dirs
FMASK_FOLDER_FILES
point_dir = point_dirs[index]
message("Processing: ", basename(point_dir))
# 1. Identify the point :)
point_dir_full_files <- list.files(point_dir, full.names = TRUE)
# 2. get only the folder with s2/s1 data :D
files_points_only_img_folder <- point_dir_full_files[grepl("^[0-9]", basename(point_dir_full_files))]
if (length(files_points_only_img_folder) != 5) {
stop("Initial regex condition fail :/")
}
# 3. Load raster ref
refraster <- list.files(
path = files_points_only_img_folder[1],
pattern = "sen2cor_real",
recursive = TRUE,
full.names = TRUE
) %>% raster()
refraster
for (index in 1:2000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
point_dirs
## nolabel
point_dirs <- list.files("/media/csaybar/Elements SE/cloudSEN12/nolabel/", full.names = TRUE)
point_dirs
for (index in 1:6000) {
print(index)
cloudsen12_up_local(point_dirs[index], FMASK_FOLDER_FILES)
}
