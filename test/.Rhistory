library(reprex)
library(tidyverse)
library(jsonlite)
#test02 -- empty JSON
json_control_2 <- function(metadata_files) {
lapply(
X = metadata_files,
FUN = function(x) tryCatch(
expr = {jsonlite::read_json(x) %>% names()},
error = function(e) TRUE
)
)
}
# test01 -- json format
json_control_1 <- function(metadata_files) {
sapply(
X = metadata_files,
FUN = function(x) tryCatch(
expr = {jsonlite::read_json(x); FALSE},
error = function(e) TRUE
)
) %>% as.logical()
}
#test03 -- Read comments
json_control_3 <- function(metadata_files) {
lapply(
X = metadata_files,
FUN = function(x) tryCatch(
expr = {
x_com <- jsonlite::read_json(x)[["comments"]]
if (x_com == "PUT_HERE_YOUR_COMMENT") {
NULL
} else {
sprintf("%s: %s",basename(x),  x_com)
}
},
error = function(e) TRUE
)
)
}
# duplicated ID?
json_control_4 <- function(metadata_files) {
lapply(
X = metadata_files,
FUN = function(x) tryCatch(
expr = { any(duplicated(names(jsonlite::read_json(x))))},
error = function(e) TRUE
)
) %>% unlist()
}
#TEST ID
metadata_folder <- "metadata/"
metadata_files <- list.files(metadata_folder, full.names = TRUE)
metadata_files
metadata_files[json_control_1(metadata_files)]
#TEST NAME
metadata_folder <- "metadata/"
metadata_files <- list.files(metadata_folder, full.names = TRUE)
metadata_files %>%
json_control_2 %>%
sapply(function(x) any(grepl("PUT_HERE_ID", x))) %>%
which() -> id_error
metadata_files[id_error]
#TEST READ_COMMENTS
metadata_folder <- "metadata/"
metadata_files <- list.files(metadata_folder, full.names = TRUE)
metadata_files %>%
json_control_3 %>%
unlist()
#TEST DUPLICATED ID
metadata_files[json_control_4(metadata_files)]
# monitoring progress :3
tile_monitoring <- function() {
drive_jsonfile <- drive_ls(
path = as_id("1fBGAjZkjPEpPr0p7c-LtJmfbLq3s87RK")
)
see_changes_get_time <- function(x) drive_jsonfile[x,]$drive_resource[[1]]$createdTime
see_changes_get_author <- function(x) drive_jsonfile[x,]$drive_resource[[1]]$lastModifyingUser$displayName
author_img_selection <- sapply(1:nrow(drive_jsonfile), see_changes_get_author)
time_img_selection <- sapply(1:nrow(drive_jsonfile), see_changes_get_time)
remove_cesar <- !author_img_selection == "Cesar Luis Aybar"
author_img_selection <- author_img_selection[remove_cesar] %>%
strsplit(" ") %>%
sapply(function(x) x[[1]][[1]])
time_img_selection <- time_img_selection[remove_cesar] %>% as.POSIXct %>% as.character
img_sel_df <- data_frame(author = author_img_selection, date = as.Date(time_img_selection)) %>%
filter(date > as.Date("2021-02-12")) %>%
group_by(author) %>%
summarise(labels = length(author))
ggplot(img_sel_df, aes(x = author, y = labels)) +
geom_bar(stat="identity") +
theme_classic()
img_sel_df
}
tile_monitoring()
library(ggplot2)
library(tidyverse)
library(googledrive)
tile_monitoring()
library(ggplot2)
library(tidyverse)
library(googledrive)
# monitoring progress :3
tile_monitoring <- function() {
drive_jsonfile <- drive_ls(
path = as_id("1fBGAjZkjPEpPr0p7c-LtJmfbLq3s87RK")
)
see_changes_get_time <- function(x) drive_jsonfile[x,]$drive_resource[[1]]$createdTime
see_changes_get_author <- function(x) drive_jsonfile[x,]$drive_resource[[1]]$lastModifyingUser$displayName
author_img_selection <- sapply(1:nrow(drive_jsonfile), see_changes_get_author)
time_img_selection <- sapply(1:nrow(drive_jsonfile), see_changes_get_time)
remove_cesar <- !author_img_selection == "Cesar Luis Aybar"
author_img_selection <- author_img_selection[remove_cesar] %>%
strsplit(" ") %>%
sapply(function(x) x[[1]][[1]])
time_img_selection <- time_img_selection[remove_cesar] %>% as.POSIXct %>% as.character
img_sel_df <- data_frame(author = author_img_selection, date = as.Date(time_img_selection)) %>%
filter(date > as.Date("2021-02-12")) %>%
group_by(author) %>%
summarise(labels = length(author))
ggplot(img_sel_df, aes(x = author, y = labels)) +
geom_bar(stat="identity") +
theme_classic()
img_sel_df
}
tile_monitoring()
182+88+161
library(ggplot2)
library(tidyverse)
library(googledrive)
# monitoring progress :3
tile_monitoring <- function() {
drive_jsonfile <- drive_ls(
path = as_id("1fBGAjZkjPEpPr0p7c-LtJmfbLq3s87RK")
)
see_changes_get_time <- function(x) drive_jsonfile[x,]$drive_resource[[1]]$createdTime
see_changes_get_author <- function(x) drive_jsonfile[x,]$drive_resource[[1]]$lastModifyingUser$displayName
author_img_selection <- sapply(1:nrow(drive_jsonfile), see_changes_get_author)
time_img_selection <- sapply(1:nrow(drive_jsonfile), see_changes_get_time)
remove_cesar <- !author_img_selection == "Cesar Luis Aybar"
author_img_selection <- author_img_selection[remove_cesar] %>%
strsplit(" ") %>%
sapply(function(x) x[[1]][[1]])
time_img_selection <- time_img_selection[remove_cesar] %>% as.POSIXct %>% as.character
img_sel_df <- data_frame(author = author_img_selection, date = as.Date(time_img_selection)) %>%
filter(date > as.Date("2021-02-12")) %>%
group_by(author) %>%
summarise(labels = length(author))
ggplot(img_sel_df, aes(x = author, y = labels)) +
geom_bar(stat="identity") +
theme_classic()
}
tile_monitoring()
drive_jsonfile <- drive_ls(
path = as_id("1fBGAjZkjPEpPr0p7c-LtJmfbLq3s87RK")
)
drive_jsonfile
# monitoring progress :3
drive_jsonfile$name
duplicated(drive_jsonfile$name)
# monitoring progress :3
sum(duplicated(drive_jsonfile$name))
drive_jsonfile$name
# monitoring progress :3
gsub("metadata_|\\.json$","",drive_jsonfile$name)
# monitoring progress :3
gsub("metadata_|\\.json$","",drive_jsonfile$name) %>% as.numeric()
# monitoring progress :3
plot(gsub("metadata_|\\.json$","",drive_jsonfile$name) %>% as.numeric())
# monitoring progress :3
ddd <- gsub("metadata_|\\.json$","",drive_jsonfile$name) %>% as.numeric()
ddd
ddd[ddd>4000]
ddd
max(ddd)
# monitoring progress :3
ddd <- gsub("metadata_|\\.json$","",drive_jsonfile$name) %>% as.numeric()
drive_jsonfile <- drive_ls(
path = as_id("1fBGAjZkjPEpPr0p7c-LtJmfbLq3s87RK")
)
# monitoring progress :3
ddd <- gsub("metadata_|\\.json$","",drive_jsonfile$name) %>% as.numeric()
ddd[ddd>4000]
ddd
drive_jsonfile <- drive_ls(
path = as_id("1NOxjbbtiyz2UqiJAJz6IsCNaLxOJlErr")
)
drive_jsonfile$name
# monitoring progress :3
ddd <- gsub("point_","",drive_jsonfile$name) %>% as.numeric()
ddd[ddd>4000]
min(ddd[ddd>4000])
min(ddd[ddd<4000])
max(ddd[ddd<4000])
